{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/regenerator-runtime/runtime-module.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js"],"names":["ContactPage","componentDidMount","_callee","form","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","document","getElementById","console","log","attachEvent","this","processForm","addEventListener","stop","e","xmlhttp","XMLHttpRequest","payload","attachments","pretext","value","text","data","JSON","stringify","preventDefault","open","onload","status","innerText","className","setRequestHeader","send","render","t","props","react__WEBPACK_IMPORTED_MODULE_4___default","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","location","_components_seo__WEBPACK_IMPORTED_MODULE_6__","title","lng","keywords","target","rel","href","src","alt","id","type","placeholder","Component","translate","global","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","module","runtime","regeneratorRuntime","exports","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","iter","then","result","done","toString","keys","object","key","push","reverse","length","pop","Context","reset","skipTempReset","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","i","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","obj","err","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","unwrapped","error","return","TypeError","info","pushTryEntry","locs","iteratorMethod","Function","__webpack_require__","g","hadRuntime","getOwnPropertyNames","indexOf","oldRuntime","asyncGeneratorStep","gen","_next","_throw","args","arguments","apply"],"mappings":"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","file":"component---src-pages-contact-js-b1cbd0a523bb5e54f546.js","sourcesContent":["import React, {Component} from 'react'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { translate } from \"react-i18next\"\nimport \"../sass/main.scss\"\n\nclass ContactPage extends Component {\n\n  async componentDidMount() {\n    var form = document.getElementById(\"slack\");\n    console.log(form);\n    console.log(document.getElementById(\"email\"))\n    console.log(document.getElementById(\"message\"))\n    if (form.attachEvent) {\n      form.attachEvent(\"submit\", this.processForm);\n    } else {\n      form.addEventListener(\"submit\", this.processForm);\n    }\n  }\n\n   processForm(e) {\n     console.log(\"here2\")\n    var xmlhttp = new XMLHttpRequest();\n    var url = \"https://hooks.slack.com/services/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\";\n    let payload ={\n      \"attachments\": [{\n      \"pretext\": document.getElementById(\"email\").value + \" says:\",\n      \"text\": document.getElementById(\"message\").value\n      }]\n    }\n    var data = JSON.stringify(payload);\n\n    if (e.preventDefault) e.preventDefault();\n\n    xmlhttp.open(\"POST\", url, true);\n    xmlhttp.onload = function() {\n      if ( xmlhttp.status === \"200\") {\n        document.getElementById(\"post\").innerText = \"Thanks!\";\n        document.getElementById(\"post\").className = \"success\";\n        document.getElementById(\"email\").value = \"\";\n        document.getElementById(\"message\").value = \"\";\n      } else {\n        document.getElementById(\"post\").innerText = \"Oops :(\";\n        document.getElementById(\"post\").className = \"error\";\n        document.getElementById(\"email\").value = \"\";\n        document.getElementById(\"message\").value = \"\";\n      }\n    }\n    xmlhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n    xmlhttp.send(data);\n\n    return false;\n  }\n\n  render (){\n  const { t } = this.props\n    return (\n      <Layout location={this.props.location}>\n        <SEO title={this.props.lng === \"fr\" ? \"Nous joindre - SCENAREXinc\" : \"Contact - SCENAREXinc\"} keywords={[`gatsby`, `application`, `react`]} />\n        <h2 className=\"biggest\">{t(\"Headquarters\")}</h2>\n\n        <div className=\"row\">\n          <div className=\"6u 12u(small)\">\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://goo.gl/maps/kCLmX9JyEcJ2\" className=\"image fit\">\n              <img src=\"https://maps.googleapis.com/maps/api/staticmap?key=AIzaSyDC9-VRzuJyogXND0-XR0Iv--Wbe5uAi1w&center=45.502091616181445,-73.56887695&zoom=10&markers=color:gray|45.502091616181445,-73.56887695&format=png&maptype=roadmap&style=element:geometry%7Ccolor:0xf5f5f5&style=element:labels.icon%7Cvisibility:off&style=element:labels.text.fill%7Ccolor:0x616161&style=element:labels.text.stroke%7Ccolor:0xf5f5f5&style=feature:administrative%7Celement:geometry%7Cvisibility:off&style=feature:administrative.land_parcel%7Cvisibility:off&style=feature:administrative.land_parcel%7Celement:labels.text.fill%7Ccolor:0xbdbdbd&style=feature:administrative.neighborhood%7Cvisibility:off&style=feature:poi%7Cvisibility:off&style=feature:poi%7Celement:geometry%7Ccolor:0xeeeeee&style=feature:poi%7Celement:labels.text%7Cvisibility:off&style=feature:poi%7Celement:labels.text.fill%7Ccolor:0x757575&style=feature:poi.park%7Celement:geometry%7Ccolor:0xe5e5e5&style=feature:poi.park%7Celement:labels.text.fill%7Ccolor:0x9e9e9e&style=feature:road%7Celement:geometry%7Ccolor:0xffffff&style=feature:road%7Celement:labels%7Cvisibility:off&style=feature:road%7Celement:labels.icon%7Cvisibility:off&style=feature:road.arterial%7Celement:labels%7Cvisibility:off&style=feature:road.arterial%7Celement:labels.text.fill%7Ccolor:0x757575&style=feature:road.highway%7Celement:geometry%7Ccolor:0xdadada&style=feature:road.highway%7Celement:labels%7Cvisibility:off&style=feature:road.highway%7Celement:labels.text.fill%7Ccolor:0x616161&style=feature:road.local%7Cvisibility:off&style=feature:road.local%7Celement:labels.text.fill%7Ccolor:0x9e9e9e&style=feature:transit%7Cvisibility:off&style=feature:transit.line%7Celement:geometry%7Ccolor:0xe5e5e5&style=feature:transit.station%7Celement:geometry%7Ccolor:0xeeeeee&style=feature:water%7Celement:geometry%7Ccolor:0xc9c9c9&style=feature:water%7Celement:labels.text%7Cvisibility:off&style=feature:water%7Celement:labels.text.fill%7Ccolor:0x9e9e9e&size=640x360\" alt=\"Map\" />\n            </a>\n          </div>\n          <div className=\"6u 12u(small)\">\n            <h3><i className=\"fas fa-map-marker-alt\"></i> {t(\"Address\")}</h3>\n            Scenarex Inc<br/>\n            {t(\"line1\")}<br/>\n            {t(\"line2\")}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"4u 12u(small)\">\n            <h3><i className=\"fas fa-envelope\"></i> {t(\"Email\")}</h3>\n            <a href=\"mailto:info@scenarex.ca\">info@scenarex.ca</a>\n          </div>\n          <div className=\"4u 12u(small)\">\n            <h3><i className=\"fas fa-mobile-alt\"></i> {t(\"Phone\")}</h3>\n            <a href=\"tel:+14385581885\">CA 1 438-558-1885</a>\n          </div>\n          <div className=\"4u 12u(small)\">\n            <h3><i className=\"fab fa-slack\"></i> Slack</h3>\n            {t(\"Post to our \")}<a href=\"https://scenarex.slack.com/\">{t(\"public\")}</a> {t(\"channel\")}\n            <form id=\"slack\">\n              <input type=\"email\" id=\"email\" placeholder=\"Email\"/>\n              <input type=\"text\" id=\"message\" placeholder=\"Message\"/>\n              <button id=\"post\"><i className=\"fas fa-bullhorn\"></i> {t(\"Post\")}</button>\n            </form>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default translate(\"translations\")(ContactPage)\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;"],"sourceRoot":""}